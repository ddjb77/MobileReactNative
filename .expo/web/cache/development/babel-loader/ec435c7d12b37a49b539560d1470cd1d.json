{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Switch, Paper, Grid, Typography } from \"@material-ui/core/\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\n\nfunction App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      darkMode = _useState2[0],\n      setDarkMode = _useState2[1];\n\n  var theme = createTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\"\n    },\n    typography: {\n      fontSize: darkMode ? \"20\" : \"16\"\n    }\n  });\n  return React.createElement(ThemeProvider, {\n    theme: theme\n  }, React.createElement(Paper, {\n    style: {\n      height: '100vh'\n    }\n  }, React.createElement(Grid, {\n    alignItems: \"center\"\n  }), React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    }\n  }, React.createElement(Switch, {\n    checked: darkMode,\n    onChange: function onChange() {\n      return setDarkMode(!darkMode);\n    }\n  }), React.createElement(Switch, {\n    checked: darkMode,\n    onChange: function onChange() {\n      return setDarkMode(!darkMode);\n    }\n  })), React.createElement(View, null, React.createElement(Typography, {\n    variant: \"h2\"\n  }, \"Teste gigante\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/david/Downloads/fatec/fatec-si6/react/expo/switchFrases/App.js"],"names":["React","useState","Switch","Paper","Grid","Typography","ThemeProvider","createTheme","App","darkMode","setDarkMode","theme","palette","type","typography","fontSize","height","display","flexDirection","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAsBC,IAAtB,EAA4BC,UAA5B,QAA6C,oBAA7C;;;;AAEA,SAAQC,aAAR,EAAuBC,WAAvB,QAA0C,0BAA1C;;AAEA,SAASC,GAAT,GAAe;AACb,kBAAgCP,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,KAAK,GAAGJ,WAAW,CAAC;AACxBK,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEJ,QAAQ,GAAG,MAAH,GAAY;AADnB,KADe;AAKxBK,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAEN,QAAQ,GAAG,IAAH,GAAU;AADlB;AALY,GAAD,CAAzB;AAgBA,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEE;AAAtB,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACK,MAAAA,MAAM,EAAC;AAAR;AAAd,KACE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAC;AAAjB,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,aAAa,EAAC,KAA/B;AAAsCC,MAAAA,cAAc,EAAC;AAArD;AAAb,KACA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEV,QAAjB;AAA2B,IAAA,QAAQ,EAAG;AAAA,aAAMC,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA;AAAtC,IADA,EAEA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,QAAjB;AAA2B,IAAA,QAAQ,EAAG;AAAA,aAAMC,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA;AAAtC,IAFA,CAFF,EAME,oBAAC,IAAD,QACA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,qBADA,CANF,CADF,CADF;AAgBD;;AAID,eAAeD,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {Switch, Paper,Grid ,Typography} from \"@material-ui/core/\"\nimport { View,StyleSheet, Text } from \"react-native\";\nimport {ThemeProvider, createTheme,} from \"@material-ui/core/styles\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const theme = createTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    },\n\n    typography: {\n      fontSize: darkMode ? \"20\" : \"16\",\n    }\n\n  });\n  \n\n  \n\n  //const trocaFont = {};\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper style={{height:'100vh'}}>\n        <Grid alignItems=\"center\"></Grid>\n        <View style={{display:'flex', flexDirection:'row', justifyContent:'space-between'}}>\n        <Switch checked={darkMode} onChange={ () => setDarkMode(!darkMode)}></Switch>\n        <Switch checked={darkMode} onChange={ () => setDarkMode(!darkMode)}></Switch>\n        </View>\n        <View >\n        <Typography variant=\"h2\">Teste gigante</Typography>\n        \n        </View>\n      </Paper>\n    </ThemeProvider>\n    \n  );\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}