{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      enabled = _useState2[0],\n      setEnabled = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    setEnabled(function (oldValue) {\n      return !oldValue;\n    });\n    onChange();\n  };\n\n  var modoClaro = {\n    backgroundColor: '#ffffff',\n    color: '#000000'\n  };\n  var modoEscuro = {\n    backgroundColor: '#000000',\n    color: '#ffffff'\n  };\n  var trocaFont = {};\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, null, enabled ? \"Switch is ON\" : \"Switch is OFF\"), React.createElement(Switch, {\n    trackColor: {\n      false: '#767577',\n      true: '#81b0ff'\n    },\n    thumbColor: enabled ? '#f5dd4b' : '#f4f3f4',\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: (toggleSwitch, modoEscuro),\n    value: enabled,\n    style: {\n      transform: [{\n        scaleX: 2\n      }, {\n        scaleY: 2\n      }]\n    }\n  }), React.createElement(Text, null, \"Fonte\"), React.createElement(Switch, {\n    trackColor: {\n      false: '#767577',\n      true: '#81b0ff'\n    },\n    thumbColor: enabled ? '#f5dd4b' : '#f4f3f4',\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    onChange: modoEscuro,\n    value: enabled\n  }));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'stretch',\n    justifyContent: 'space-around',\n    flexDirection: 'row',\n    margin: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/david/Downloads/fatec/fatec-si6/react/expo/switchFrases/App.js"],"names":["React","useState","App","enabled","setEnabled","toggleSwitch","oldValue","onChange","modoClaro","backgroundColor","color","modoEscuro","trocaFont","styles","container","false","true","transform","scaleX","scaleY","StyleSheet","create","flex","alignItems","justifyContent","flexDirection","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAA8BD,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOE,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,IAAAA,UAAU,CAAC,UAACE,QAAD;AAAA,aAAc,CAACA,QAAf;AAAA,KAAD,CAAV;AACAC,IAAAA,QAAQ;AACT,GAHD;;AAOF,MAAMC,SAAS,GAAG;AAChBC,IAAAA,eAAe,EAAC,SADA;AAEhBC,IAAAA,KAAK,EAAC;AAFU,GAAlB;AAKA,MAAMC,UAAU,GAAG;AACjBF,IAAAA,eAAe,EAAC,SADC;AAEjBC,IAAAA,KAAK,EAAC;AAFW,GAAnB;AAKA,MAAME,SAAS,GAAG,EAAlB;AAIE,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD,QAAOX,OAAO,GAAG,cAAH,GAAoB,eAAlC,CADF,EAEE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AAAEY,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KADd;AAEE,IAAA,UAAU,EAAEb,OAAO,GAAG,SAAH,GAAe,SAFpC;AAGE,IAAA,mBAAmB,EAAC,SAHtB;AAIE,IAAA,aAAa,GAAEE,YAAY,EAAEM,UAAhB,CAJf;AAME,IAAA,KAAK,EAAER,OANT;AAOE,IAAA,KAAK,EAAE;AAAEc,MAAAA,SAAS,EAAC,CAAC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAD,EAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB;AAAZ;AAPT,IAFF,EAcE,oBAAC,IAAD,gBAdF,EAeG,oBAAC,MAAD;AACC,IAAA,UAAU,EAAE;AAAEJ,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KADb;AAEC,IAAA,UAAU,EAAEb,OAAO,GAAG,SAAH,GAAe,SAFnC;AAGC,IAAA,mBAAmB,EAAC,SAHrB;AAIC,IAAA,aAAa,EAAEE,YAJhB;AAKC,IAAA,QAAQ,EAAIM,UALb;AAMC,IAAA,KAAK,EAAER;AANR,IAfH,CADF;AA4BD;AAAA;AAED,IAAMU,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,SAFH;AAGTC,IAAAA,cAAc,EAAE,cAHP;AAITC,IAAAA,aAAa,EAAC,KAJL;AAKTC,IAAAA,MAAM,EAAC;AALE;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, Switch, StyleSheet, Text } from 'react-native';\n\nexport default function App() {\n  const [enabled, setEnabled] = useState(false);\n\n  const toggleSwitch = () => {\n    setEnabled((oldValue) => !oldValue);\n    onChange();\n  };\n\n\n\nconst modoClaro = {\n  backgroundColor:'#ffffff',\n  color:'#000000',\n}\n\nconst modoEscuro = {\n  backgroundColor:'#000000',\n  color:'#ffffff',\n}\n\nconst trocaFont = {\n  \n}\n\n  return (\n    <View style={styles.container}>\n      <Text>{enabled ? \"Switch is ON\" : \"Switch is OFF\"}</Text>\n      <Switch\n        trackColor={{ false: '#767577', true: '#81b0ff' }}\n        thumbColor={enabled ? '#f5dd4b' : '#f4f3f4'}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={toggleSwitch, modoEscuro }\n        \n        value={enabled}\n        style={{ transform:[{ scaleX: 2 }, { scaleY: 2}] }}\n        \n\n        \n      />\n      <Text>Fonte</Text>\n       <Switch\n        trackColor={{ false: '#767577', true: '#81b0ff' }}\n        thumbColor={enabled ? '#f5dd4b' : '#f4f3f4'}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={toggleSwitch }\n        onChange = {modoEscuro}\n        value={enabled}\n        \n      />\n      \n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'stretch',\n    justifyContent: 'space-around',\n    flexDirection:'row',\n    margin:10\n  },\n});\n\n"]},"metadata":{},"sourceType":"module"}