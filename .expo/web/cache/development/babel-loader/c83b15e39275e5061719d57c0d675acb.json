{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Switch, Paper } from \"@material-ui/core/\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\n\nfunction App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      darkMode = _useState2[0],\n      setDarkMode = _useState2[1];\n\n  var them = createTheme({\n    typography: {\n      htmlFontSize: 10\n    }\n  });\n  var theme = createTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\"\n    }\n  });\n  return React.createElement(ThemeProvider, {\n    theme: theme\n  }, React.createElement(Paper, {\n    style: {\n      height: '100vh',\n      display: 'block'\n    }\n  }, React.createElement(View, null, React.createElement(View, null, React.createElement(Text, null, \"Dia\"), React.createElement(Switch, {\n    ios_backgroundColor: \"#3e3e3e\",\n    checked: darkMode,\n    onChange: function onChange() {\n      return setDarkMode(!darkMode);\n    }\n  })), React.createElement(View, null, React.createElement(Text, null, \"Fonte\"), React.createElement(Switch, {\n    ios_backgroundColor: \"#3e3e3e\",\n    checked: darkMode,\n    onChange: function onChange() {\n      return setDarkMode(!darkMode);\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/david/Downloads/fatec/fatec-si6/react/expo/switchFrases/App.js"],"names":["React","useState","Switch","Paper","ThemeProvider","createTheme","App","darkMode","setDarkMode","them","typography","htmlFontSize","theme","palette","type","height","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,oBAA5B;;;;AAEA,SAAQC,aAAR,EAAuBC,WAAvB,QAAwC,0BAAxC;;AAEA,SAASC,GAAT,GAAe;AACb,kBAAgCL,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AAIA,MAAMC,IAAI,GAAGJ,WAAW,CAAC;AACvBK,IAAAA,UAAU,EAAE;AAEVC,MAAAA,YAAY,EAAE;AAFJ;AADW,GAAD,CAAxB;AAQA,MAAMC,KAAK,GAAGP,WAAW,CAAC;AAGxBQ,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEP,QAAQ,GAAG,MAAH,GAAY;AADnB;AAHe,GAAD,CAAzB;AAiBA,SAEE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEK;AAAtB,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACG,MAAAA,MAAM,EAAE,OAAT;AAAkBC,MAAAA,OAAO,EAAE;AAA3B;AAAd,KACE,oBAAC,IAAD,QAEI,oBAAC,IAAD,QACA,oBAAC,IAAD,cADA,EAGA,oBAAC,MAAD;AAGE,IAAA,mBAAmB,EAAC,SAHtB;AAIE,IAAA,OAAO,EAAET,QAJX;AAIqB,IAAA,QAAQ,EAAE;AAAA,aAAMC,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA;AAJ/B,IAHA,CAFJ,EAcE,oBAAC,IAAD,QACE,oBAAC,IAAD,gBADF,EAEE,oBAAC,MAAD;AAGE,IAAA,mBAAmB,EAAC,SAHtB;AAIE,IAAA,OAAO,EAAEA,QAJX;AAIqB,IAAA,QAAQ,EAAE;AAAA,aAAMC,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA;AAJ/B,IAFF,CAdF,CADF,CADA,CAFF;AAgCD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {Switch, Paper} from \"@material-ui/core/\"\nimport { View, StyleSheet, Text } from \"react-native\";\nimport {ThemeProvider, createTheme}from \"@material-ui/core/styles\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n\n\n\n  const them = createTheme({\n    typography: {\n      // Tell Material-UI what's the font-size on the html element is.\n      htmlFontSize: 10,\n    },\n  });\n\n\n  const theme = createTheme({\n\n    \n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    },\n  \n\n    \n  \n  });\n  \n\n  \n\n  //const trocaFont = {};\n\n  return (\n    \n    <ThemeProvider theme={theme}>\n    <Paper style={{height: '100vh', display: 'block'}}>\n      <View>\n         \n          <View>\n          <Text>Dia</Text>\n          \n          <Switch\n            \n            \n            ios_backgroundColor=\"#3e3e3e\"\n            checked={darkMode} onChange={() => setDarkMode(!darkMode)}\n            \n          />\n        </View>\n        \n        <View>\n          <Text>Fonte</Text>\n          <Switch\n            \n            \n            ios_backgroundColor=\"#3e3e3e\"\n            checked={darkMode} onChange={() => setDarkMode(!darkMode)}\n            \n          />\n          </View>\n      </View>\n    </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}