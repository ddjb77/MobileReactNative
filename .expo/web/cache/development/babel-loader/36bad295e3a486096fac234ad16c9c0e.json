{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport darkMode from \"./styles/themes\";\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      enabled = _useState2[0],\n      setEnabled = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    setEnabled(function (oldValue) {\n      return !oldValue;\n    });\n  };\n\n  var _useState3 = useState(Appearance.getColorScheme()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      theme = _useState4[0],\n      setTheme = _useState4[1];\n\n  Appearance.addChangeListener(function (scheme) {\n    setTheme(scheme.colorScheme);\n  });\n  return React.createElement(View, {\n    style: theme === \"light\" ? styles.card : darkMode.card\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.bar\n  }, React.createElement(Text, null, \"Dia\"), React.createElement(Text, null, enabled ? \"Claro\" : \"Escuro\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#46c186\"\n    },\n    thumbColor: enabled ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: enabled,\n    style: {\n      margin: 10,\n      transform: [{\n        scaleX: 1.5\n      }, {\n        scaleY: 1.5\n      }]\n    }\n  })), React.createElement(View, {\n    style: styles.bar\n  }, React.createElement(Text, null, \"Fonte\"), React.createElement(Text, null, enabled ? \"Pequena\" : \"Grande\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#46c186\"\n    },\n    thumbColor: enabled ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: enabled,\n    style: {\n      margin: 10,\n      transform: [{\n        scaleX: 1.5\n      }, {\n        scaleY: 1.5\n      }]\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  card: {\n    flex: 1,\n    justifyContent: \"center\",\n    width: \"100%\",\n    backgroundColor: \"#fff\"\n  },\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  bar: {\n    alignItems: \"center\",\n    margin: 10\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/david/Downloads/fatec/fatec-si6/react/expo/switchFrases/App.js"],"names":["React","useState","darkMode","App","enabled","setEnabled","toggleSwitch","oldValue","Appearance","getColorScheme","theme","setTheme","addChangeListener","scheme","colorScheme","styles","card","container","bar","false","true","margin","transform","scaleX","scaleY","StyleSheet","create","flex","justifyContent","width","backgroundColor","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Switch, StyleSheet, Text, Appearance } from \"react-native\";\n// import { ThemeProvider } from \"styled-components\";\nimport darkMode from \"./styles/themes\";\n\nconst App = () => {\n  const [enabled, setEnabled] = useState(false);\n\n  const toggleSwitch = () => {\n    setEnabled((oldValue) => !oldValue);\n  };\n  const[theme,setTheme] = useState(Appearance.getColorScheme());\n  Appearance.addChangeListener((scheme) => {\n    setTheme(scheme.colorScheme);\n  })\n\n  return (\n  \n    <View style={theme === \"light\"?styles.card:darkMode.card}>\n      <View style={styles.container}>\n        <View style={styles.bar}>\n          <Text>Dia</Text>\n          <Text>{enabled ? \"Claro\" : \"Escuro\"}</Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#46c186\" }}\n            thumbColor={enabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={toggleSwitch}\n            value={enabled}\n            style={{\n              margin: 10,\n              transform: [{ scaleX: 1.5 }, { scaleY: 1.5 }],\n            }}\n          />\n        </View>\n        <View style={styles.bar}>\n          <Text>Fonte</Text>\n          <Text>{enabled ? \"Pequena\" : \"Grande\"}</Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#46c186\" }}\n            thumbColor={enabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={toggleSwitch}\n            value={enabled}\n            style={{\n              margin: 10,\n              transform: [{ scaleX: 1.5 }, { scaleY: 1.5 }],\n            }}\n          />\n        </View>\n      </View>\n    </View>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flex: 1,\n    justifyContent: \"center\",\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n  },\n\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n  },\n\n  bar: {\n    alignItems: \"center\",\n    margin: 10,\n  },\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}