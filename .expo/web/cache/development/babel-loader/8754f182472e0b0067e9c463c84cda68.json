{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Switch, Grid, Paper } from \"@material-ui/core/\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nfunction App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      darkMode = _useState2[0],\n      setDarkMode = _useState2[1];\n\n  var theme = createTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\"\n    }\n  });\n  return React.createElement(ThemeProvider, {\n    theme: theme\n  }, React.createElement(Paper, {\n    style: {\n      height: '100vh'\n    }\n  }, React.createElement(Grid, {\n    style: {\n      display: 'flex',\n      backgroundColor: 'blue'\n    }\n  }, React.createElement(Text, null, \"Dia\"), React.createElement(Text, null), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#46c186\"\n    },\n    ios_backgroundColor: \"#3e3e3e\",\n    checked: darkMode,\n    onChange: function onChange() {\n      return setDarkMode(!darkMode);\n    }\n  }), React.createElement(Text, null, \"Fonte\"), React.createElement(Text, null, \"lal\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#46c186\"\n    },\n    ios_backgroundColor: \"#3e3e3e\",\n    checked: darkMode,\n    onChange: function onChange() {\n      return setDarkMode(!darkMode);\n    }\n  }), React.createElement(Text, null, \"Ol\\xE1 tudo bem??\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/david/Downloads/fatec/fatec-si6/react/expo/switchFrases/App.js"],"names":["React","useState","Switch","Grid","Paper","createTheme","ThemeProvider","App","darkMode","setDarkMode","theme","palette","type","height","display","backgroundColor","false","true"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,MAAR,EAAeC,IAAf,EAAqBC,KAArB,QAAiC,oBAAjC;;;;AAEA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAAQC,aAAR,QAA2B,0BAA3B;;AAEA,SAASC,GAAT,GAAe;AACb,kBAAgCN,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AAIA,MAAMC,KAAK,GAAGL,WAAW,CAAC;AACxBM,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEJ,QAAQ,GAAG,MAAH,GAAY;AADnB;AADe,GAAD,CAAzB;AAeA,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEE;AAAtB,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACG,MAAAA,MAAM,EAAE;AAAT;AAAd,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,eAAe,EAAE;AAAlC;AAAb,KAEI,oBAAC,IAAD,cAFJ,EAGI,oBAAC,IAAD,OAHJ,EAII,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KADd;AAGE,IAAA,mBAAmB,EAAC,SAHtB;AAIE,IAAA,OAAO,EAAET,QAJX;AAIqB,IAAA,QAAQ,EAAE;AAAA,aAAMC,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA;AAJ/B,IAJJ,EAYI,oBAAC,IAAD,gBAZJ,EAaI,oBAAC,IAAD,cAbJ,EAcI,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AAAEQ,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KADd;AAGE,IAAA,mBAAmB,EAAC,SAHtB;AAIE,IAAA,OAAO,EAAET,QAJX;AAIqB,IAAA,QAAQ,EAAE;AAAA,aAAMC,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA;AAJ/B,IAdJ,EAqBI,oBAAC,IAAD,4BArBJ,CADF,CADA,CADF;AA6BD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {Switch,Grid, Paper} from \"@material-ui/core/\"\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { createTheme } from '@material-ui/core/styles'\nimport {ThemeProvider}from \"@material-ui/core/styles\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n\n\n\n  const theme = createTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n      \n    },\n\n    \n  \n  });\n  \n\n  \n\n  //const trocaFont = {};\n\n  return (\n    <ThemeProvider theme={theme}>\n    <Paper style={{height: '100vh',}}>\n      <Grid style={{display:'flex', backgroundColor: 'blue'}}>\n    \n          <Text>Dia</Text>\n          <Text></Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#46c186\" }}\n            \n            ios_backgroundColor=\"#3e3e3e\"\n            checked={darkMode} onChange={() => setDarkMode(!darkMode)}\n            \n          />\n        \n          <Text>Fonte</Text>\n          <Text>lal</Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#46c186\" }}\n            \n            ios_backgroundColor=\"#3e3e3e\"\n            checked={darkMode} onChange={() => setDarkMode(!darkMode)}\n            \n          />\n          <Text>Ol√° tudo bem??</Text>\n      </Grid>\n    </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}